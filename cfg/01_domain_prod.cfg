// What to do with characters coming from another mainland shard?
// 0: teleport to the stored session id
// 1: let the character play anyway, but leave the stored session id unchanged
// 2: assign the stored session id with FixedSessionId and let play
AllowCharsFromAllSessions = 0;

// Use Shard Unifier or not
DontUseSU = 0;

// the domain's set of useful addresses
LSHost = SUHost;
RSMHost = SUHost;

// MFS config
WebSrvUsersDirectory = "";
// WebRootDirectory = "/home/nevrax/prod/save_shard/www";
HoFHDTDirectory = "/var/www/prod.example.com/public_php/hof/hdt";

// BS Specifics --------------------------------------------------------------------------
// BS - set to 1 if a BS is not part of a naming service group (then BS not disclosed
// to other services by the Layer 5, i.e. the services sending requests to BS have
// to know its/their address(es) by another mean)
BSDontUseNS = 1;
// BS - set the host of the naming service where the BS register
BSNSHost = "localhost";
UseBS = 1;
XMLSave = 0;

/// A list of vars to graph for any service
GraphVars =
{
	"ProcessUsedMemory", "60000",	// every minute
};


// Where to save specific shard data (ie: player backup), relatively to SaveShardRoot
SaveFilesDirectory	= "";

// where to save generic shard data (ie: packed_sheet)
WriteFilesDirectory	= "r2_shard/data_shard";

// Will SaveFilesDirectory will be converted to a full path?
ConvertSaveFilesDirectoryToFullPath = 0;

// BS - Root directory where data are backuped to
IncrementalBackupDirectory = "../incremental_backup";

// IOS - Directory to store ios.string_cache file
StringManagerCacheDirectory = "../data_shard_local";

// IOS - Directory to log chat into
LogChatDirectory = "../data_shard_local";

// MFS - Directories
WebRootDirectory = "../www";

// Root directory where data from shards are stored into
SaveShardRoot = "../save_shard/";

// SU Specifics --------------------------------------------------------------------------
// SU - set to 1 if SU didn't use a naming service
SUDontUseNS = 1;
// SU - host for the NS used by SU
SUNSHost = "localhost";
// SU - listen address of the SU service (for L5 connections)
SUAddress = SUHost+":"+SUPort;
// SU - nel and ring database names
DBNelName = "nel";
DBRingName = "ring_prod";
// Nel DB user
DBNelUser = "su_agent";
// SU - password to access to the nel database with DBNelUseruser (default is no password)
DBNelPass = "NL_SQL_PASSWORD";
// Ring DB user
DBRingUser = "su_agent";
// SU - password to access to the ring database with DBRingUser (default is no password)
DBRingPass = "NL_SQL_PASSWORD";

#optional "../local_db.cfg"

// WS Specifics --------------------------------------------------------------------------
// WS - use or not the legacy WelcomeService from nel ns (only for backward compatibility during transition to ring)
DontUseLSService = 1;
// WS - shard id
//ShardId = 1;

// FS Specifics --------------------------------------------------------------------------
// FS - Allow direct player connections & Set the default user type for clients connecting directly
//AcceptInvalidCookie = 1;
//DefaultUserPriv = ":DEV:";

// Global config --------------------------------------------------------------------------
// set to 0 if you want to use the admin system
DontUseAES = 1;

